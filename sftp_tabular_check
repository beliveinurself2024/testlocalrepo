#!/bin/bash

EMAIL="d@g.com"
HTML_REPORT="/tmp/sftp_audit_report.html"
TMP_DATA="/tmp/sftp_audit_data.tsv"
FROM="sftp-audit@domain.com"

PRIMARY_EXTERNAL="AA"
SECONDARIES_EXTERNAL=("AB" "AC" "AD")
PRIMARY_INTERNAL="BA"
SECONDARIES_INTERNAL=("BB" "BC" "BD")
ALL_SERVERS=("$PRIMARY_EXTERNAL" "${SECONDARIES_EXTERNAL[@]}" "$PRIMARY_INTERNAL" "${SECONDARIES_INTERNAL[@]}")

echo -e "Server_name\tsshd_config_file\tsftp_config_file\tsymlink_nologin\tftphome_mount\tftpaccess_script\tftpadmin_userid\tssh_to_secondary" > "$TMP_DATA"

check_remote() {
    ssh -o BatchMode=yes -o ConnectTimeout=5 "$1" "$2" >/dev/null 2>&1 && echo "$3" || echo "Not OK"
}

for server in "${ALL_SERVERS[@]}"; do
    echo "Checking $server..."

    check1=$(check_remote "$server" "grep -q '^Subsystem sftp /usr/bin/mysecureshell -c sftp-server' /etc/ssh/sshd_config" "mysecureshell config ok")
    check2=$(check_remote "$server" "[ -f /etc/ssh/sftp_config ]" "sftp_config file ok")
    check3=$(check_remote "$server" "[ -L /sbin/nologin ] && [ \"$(readlink -f /sbin/nologin)\" = \"/usr/bin/myshell\" ]" "/sbin/nologin symlink ok")
    check4=$(check_remote "$server" "mount | grep -q /ftphome && grep -q '/ftphome' /etc/fstab" "mounted and fstab entry ok")
    check5=$(check_remote "$server" "[ -f /ftphome/admin/scripts/ftpaccess/ftpaccess.sh ]" "ftpaccess script ok")
    check6=$(check_remote "$server" "id ftpadmin" "ftpadmin User Exist")

    echo -e "$server\t$check1\t$check2\t$check3\t$check4\t$check5\t$check6\tN/A" >> "$TMP_DATA"
done

check_ssh_links() {
    local primary="$1"
    shift
    local secondaries=("$@")
    local result=""
    for sec in "${secondaries[@]}"; do
        ssh_test=$(ssh -o BatchMode=yes -o ConnectTimeout=5 "$primary" "ssh -o BatchMode=yes -o ConnectTimeout=5 ftpadmin@$sec 'exit 0'" >/dev/null 2>&1 && echo "OK" || echo "NOK")
        result+="$sec:$ssh_test, "
    done
    echo "${result%, }"
}

ext_result=$(check_ssh_links "$PRIMARY_EXTERNAL" "${SECONDARIES_EXTERNAL[@]}")
int_result=$(check_ssh_links "$PRIMARY_INTERNAL" "${SECONDARIES_INTERNAL[@]}")

sed -i "s/^$PRIMARY_EXTERNAL\t.*/&\t$ext_result/" "$TMP_DATA"
sed -i "s/^$PRIMARY_INTERNAL\t.*/&\t$int_result/" "$TMP_DATA"

{
  echo "<html><body><h2>SFTP Server Audit Report</h2>"
  echo "<table border='1' cellpadding='5' cellspacing='0' style='border-collapse:collapse;'>"
  echo "<tr style='background-color:#f2f2f2;'><th>Server_name</th><th>sshd_config_file</th><th>sftp_config_file</th><th>symlink_nologin</th><th>ftphome_mount</th><th>ftpaccess_script</th><th>ftpadmin_userid</th><th>ssh_to_secondary</th></tr>"

  tail -n +2 "$TMP_DATA" | while IFS=$'\t' read -r s f1 f2 f3 f4 f5 f6 f7; do
    color() { [[ $1 == *ok || $1 == *Exist || $1 == *OK* ]] && echo "#d4edda" || echo "#f8d7da"; }
    echo "<tr><td>$s</td>"
    echo "<td style='background-color:$(color "$f1");'>$f1</td>"
    echo "<td style='background-color:$(color "$f2");'>$f2</td>"
    echo "<td style='background-color:$(color "$f3");'>$f3</td>"
    echo "<td style='background-color:$(color "$f4");'>$f4</td>"
    echo "<td style='background-color:$(color "$f5");'>$f5</td>"
    echo "<td style='background-color:$(color "$f6");'>$f6</td>"
    echo "<td style='background-color:$(color "$f7");'>$f7</td></tr>"
  done

  echo "</table></body></html>"
} > "$HTML_REPORT"

(
  echo "From: $FROM"
  echo "To: $EMAIL"
  echo "Subject: SFTP Server Audit Report"
  echo "MIME-Version: 1.0"
  echo "Content-Type: text/html"
  echo
  cat "$HTML_REPORT"
) | /usr/sbin/sendmail -t
